// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Movie {
  id Int @id @default(autoincrement())
  title String
  poster String
  description String @db.Text
  imdb String
  director String
  actors String
  duration String
  start_date DateTime
  genre Genre @relation(fields: [genreId], references: [id])
  genreId Int
  rating Rating @relation(fields: [ratingId], references: [id])
  ratingId Int
  projections Projection[]
}

model Genre {
  id Int @id @default(autoincrement())
  name String
  movies Movie[]
}

model Rating {
  id Int @id @default(autoincrement())
  name String
  movies Movie[]
}

model Room {
  id Int @id @default(autoincrement())
  name String
  seats Int
  projections Projection[]
}

model Projection {
  id Int @id @default(autoincrement())
  movie Movie @relation(fields: [movieId], references: [id])
  movieId Int
  room Room @relation(fields: [roomId], references: [id])
  roomId Int
  time DateTime
  available_seats Int
  tickets Ticket[]
}

model Ticket {
  id Int @id @default(autoincrement())
  projection Projection @relation(fields: [projectionId], references: [id])
  projectionId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  price Float
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role    Role     @default(REGULAR)
  tickets Ticket[]
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  REGULAR
  ADMIN
}


